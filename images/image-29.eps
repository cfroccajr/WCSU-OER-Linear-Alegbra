%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.51.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 170 200
%%HiResBoundingBox: 0 0 170 200
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HQTZSQ+CMR12
%!FontType1-1.0: HQTZSQ+CMR12003.002
12 dict begin
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \(c\) 1997, 2009 American Mathematical Society \(<htt\
p://www.ams.org>\), with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /HQTZSQ+CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-34 -251 988 750] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F95CB8F8CEBD4396C74A37E2724CD63F484F47C6447F507C11793B061A71C2EB
7D651F93505835EBF9032E361AE5C694F562A11D768CB4FB2540B4281CECEE7D
3A31CE697DC0DEFB6C96B38A970EDFE1B25B852DF4F12D7FA0932E9DE6181BBE
DCD1306A9EB0AFEF37E8FCBE25FB1A843A2D67AB2CEB0D8AAC217FEAE0C1F3A9
6EA27594AD85747780D7B015C4E8064EEDC329E82E9BF096E7CE83A8493E591B
ED192F9E0BBC812B8A27B7C34952D4D896884F29DFEB28E9C9ED124DD283AA80
4C9F7532228CCD42F837791810AC8AD0A06FB71C40B1B752D8B5AB45746A72F3
B4F85E3ED17154A87EDA93507C896596EDCBD09E46D65AF0FCBDE9A8D23B96AB
08F88BF354639728B8B23ED6382EA0260005F42AAA1CE3531969C5D19F58750C
105DD0A6BA78B457DFCA70C8A17E63A82A56207699D5E180DE2F58E656945936
7B981EBFBEAD935BD3E44A5D69FC84132FAF22277A8CFD2667F9268980702FF2
6C01B1CF044BECBE37CF7D520AD64AC3A6DD828AD8D3510DE4BE9014F8905E7E
A301C3354658512EFF78F777EA7D984A7C204C5E2C8C670B60D71571A8CC6B66
DD4E3ED99DE3C3578F870F9B4EC2311147D78613BD58E1A9166E59F7C2D51DE8
CEA9E12D8A3F1AF119FEB6D18461A33ECE8ADCA0EE06E4AB485EA2433897E957
34ADC852BF856FDB43FB6D490F1F255E3E7D697ABAADACF6E82B400CC0A61DF8
50E6F8E38AF19224CA0815A39932E53D0A9BC05C4F955E7D6121B326EEED30B1
595078CF410D633B62131229671C512E5FA620311B8978595616A9100C841027
A9D6DD299A42994667C1CC8BC7B48A70038AFFD823C42FD7F94B6AC29A6BEDE5
04EBB7E56545EA869089E5EA2021507114BED86FE4DA1B6501CE05F4B5A77F9D
C1B7D208B1A64AC7026BE7F6E0D2FD6D312465F7C6430FACA463B0C2A8C55565
DB353851E301E4A5040B3FFAF5FE6B4A23E0DEAC14F8E0DF3DA37FEF45372790
409437281D930FD75FE133439553D4663C1A51AABCE80B218B59C8977AB0EBBE
D332FDD92B564013B2D7C8C12B5E285D49A971B8056150CBEDF1D75CB889F6E3
C252FEDBCFBDEF4FF62C8B3BF3A1D3D7EE7A89925A55B1EC04B381D15870B98B
414693B1DCB6E3B74A286FCFAB98EF39607036726BEF298F8E830F9826E12261
7536C023B6B75F70825CA913888DBB5B31EBC69D6EB226650D6513A27381B1B6
32382358CECF99D3C0694FD3559F85248FC4CBE9446CA164FEB73A3268C7143E
B3F8E3E3524B16D8962AE50FA1A90DE9E0103FB7209140F0DA327775EDAEA793
ABEE97A886400B318BB40784C552ED83344EE65BB3133E5F7F29FF90E1C2660C
1C258C1D6F2E294EDEFE316389175BC0108B767A1E13DECFA178614E2883559C
7C87CE6D49CC5A186F4754937F66A030EF1FFF1165007EA66694739708C9BACC
CC4EDD21DB3E27F5152955F808E2D211D11922691190BBC0B72A21E86AE36149
42EC71919F91A5E61D1827C0FB5A7CC382CE21D7F5829008AB7E393335DD479D
AE31C41C48A95F449015E8205A79388E9FBD09717071E63A7094197667EF32B3
9D6A5ADCA27564B1ED3C754A65E673A23E73B629834DF687F1DD4E4412F6F02D
7EC1CD7EBB88F024DB263933F2E82E720C27830C7F25422191DB70F87B073756
AD0F7E14A6AD24A0EFAEBA193B7B8E0D98F70DEA26D2562208800A7201D5881B
0E556121BD1121B5CC7C6EDEDCE14B02895E0A0A3E04D2E1D6C05EAA9CE7BB57
9C9F6F1F15F7E762C516A629A5D4CD70A0F4BEBB3C506F134760AA37BFB0DBCA
B64EB976BC084714F4AD8FB0E96FCC121FDACBE7B4F29FFA0E0B3A83DB059CC2
46D98854A7CA1D32D4D2D7CF996331A488046ED171E43C433F9E69210728D8A3
D62643162D914E7A61A71F4209127AC2DAFC92021B40DE222BFED0C2A05A0778
3B9160D5265AB07F52D60B7CFE66D7D9B3294AFB6FBF75D3AF882743D1CB93C8
A1FDC4864D26506C09E82891D2A494ED3D8B9BE6A310B77AE86EA98A812414E3
A0D20C50742AEB56399C0CE35475D71B898BBF3E8699AEC8ED79C23D62BA31
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /HQTZSQ+CMR12 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 170 200 re
W
q
q
[1 0 0 1 -120 -535] cm
q
[1 0 0 1 0 0] cm
0 0 612 792 re
W
q
[1 0 0 1 72 720] cm
q
[1 0 0 1 76.867 -155.878] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
Q
q
Q
q
-28.3468 0 m
112.92896 0 l
S
q
[1 0 0 1 112.92896 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
0 -28.3468 m
0 169.62257 l
S
q
[0 1 -1 0 0 169.62257] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[0 0 1] SC
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
31.33563 141.73404 m
31.33563 143.38475 29.99751 144.72287 28.3468 144.72287 c
26.69609 144.72287 25.35797 143.38475 25.35797 141.73404 c
25.35797 140.08333 26.69609 138.74521 28.3468 138.74521 c
29.99751 138.74521 31.33563 140.08333 31.33563 141.73404 c
h
f
31.33563 141.73404 m
31.33563 143.38475 29.99751 144.72287 28.3468 144.72287 c
26.69609 144.72287 25.35797 143.38475 25.35797 141.73404 c
25.35797 140.08333 26.69609 138.74521 28.3468 138.74521 c
29.99751 138.74521 31.33563 140.08333 31.33563 141.73404 c
h
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceRGB {} CS
[0 0 1] SC
/DeviceRGB {} cs
[0 0 1] sc
q
[1 0 0 1 76.867 -155.878] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 32.448 138.745] cm
/DeviceRGB {} CS
[0 0 1] SC
/DeviceRGB {} cs
[0 0 1] sc
[1 0 0 1 0 0] Tm
0 0 Td
76.867 -155.878 Td
/F8_0 11.9552 Tf
(\(1,5\))
[4.55254
0
5.853266
0
3.251814
0
5.853266
0
4.55254
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceRGB {} CS
[0 0 1] SC
/DeviceRGB {} cs
[0 0 1] sc
q
[1 0 0 1 76.867 -155.878] cm
Q
Q
Q
Q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
q
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} cs
[1 0 0] sc
88.02925 85.04042 m
88.02925 86.69113 86.69113 88.02925 85.04042 88.02925 c
83.38971 88.02925 82.05159 86.69113 82.05159 85.04042 c
82.05159 83.38971 83.38971 82.05159 85.04042 82.05159 c
86.69113 82.05159 88.02925 83.38971 88.02925 85.04042 c
h
f
88.02925 85.04042 m
88.02925 86.69113 86.69113 88.02925 85.04042 88.02925 c
83.38971 88.02925 82.05159 86.69113 82.05159 85.04042 c
82.05159 83.38971 83.38971 82.05159 85.04042 82.05159 c
86.69113 82.05159 88.02925 83.38971 88.02925 85.04042 c
h
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
q
[1 0 0 1 76.867 -155.878] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 89.141 82.052] cm
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
76.867 -155.878 Td
/F8_0 11.9552 Tf
(\(3,3\))
[4.55254
0
5.853266
0
3.251814
0
5.853266
0
4.55254
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
q
[1 0 0 1 76.867 -155.878] cm
Q
Q
Q
Q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
q
/DeviceRGB {} CS
[0 0.3 0] SC
/DeviceRGB {} cs
[0 0.3 0] sc
/DeviceRGB {} cs
[0 0.3 0] sc
116.37607 0 m
116.37607 1.6507 115.03793 2.98883 113.38724 2.98883 c
111.73653 2.98883 110.3984 1.6507 110.3984 0 c
110.3984 -1.6507 111.73653 -2.98883 113.38724 -2.98883 c
115.03793 -2.98883 116.37607 -1.6507 116.37607 0 c
h
f
116.37607 0 m
116.37607 1.6507 115.03793 2.98883 113.38724 2.98883 c
111.73653 2.98883 110.3984 1.6507 110.3984 0 c
110.3984 -1.6507 111.73653 -2.98883 113.38724 -2.98883 c
115.03793 -2.98883 116.37607 -1.6507 116.37607 0 c
h
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceRGB {} CS
[0 0.3 0] SC
/DeviceRGB {} cs
[0 0.3 0] sc
q
[1 0 0 1 76.867 -155.878] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 117.488 -2.989] cm
/DeviceRGB {} CS
[0 0.3 0] SC
/DeviceRGB {} cs
[0 0.3 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
76.867 -155.878 Td
/F8_0 11.9552 Tf
(\(4,0\))
[4.55254
0
5.853266
0
3.251814
0
5.853266
0
4.55254
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceRGB {} CS
[0 0.3 0] SC
/DeviceRGB {} cs
[0 0.3 0] sc
q
[1 0 0 1 76.867 -155.878] cm
Q
Q
Q
Q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HQTZSQ+CMR12
%%EOF
